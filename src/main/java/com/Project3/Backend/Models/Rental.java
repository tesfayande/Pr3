package com.Project3.Backend.Models;import jakarta.persistence.*;import org.hibernate.annotations.CreationTimestamp;import org.hibernate.annotations.SourceType;import org.hibernate.annotations.UpdateTimestamp;import java.time.Instant;@Entity@Table(name = "rentals")public class Rental {    @Id    @GeneratedValue(strategy = GenerationType.IDENTITY)    private int id;    @Column(name = "name",nullable = false)    private String name;    @Column(name = "surface",nullable = false)    private int surface;    @Column(name = "price",nullable = false)    private double price;    @Column(name = "picture",nullable =true)    private String picture;    @Column(name = "description",nullable = false)    private String description;    // two-directional OneToMany    @ManyToOne(cascade= CascadeType.ALL)    @JoinColumn(name = "owner_id")    private User user;    @CreationTimestamp(source = SourceType.DB)    @Column(name = "created_at")    private Instant createdAt;    @UpdateTimestamp(source = SourceType.DB)    @Column(name = "updated_at")    private Instant UpdatedAt;    public int getId() {        return id;    }    public void setId(int id) {        this.id = id;    }    public String getName() {        return name;    }    public void setName(String name) {        this.name = name;    }    public int getSurface() {        return surface;    }    public void setSurface(int surface) {        this.surface = surface;    }    public double getPrice() {        return price;    }    public void setPrice(double price) {        this.price = price;    }    public String getPicture() {        return picture;    }    public void setPicture(String picture) {        this.picture = picture;    }    public String getDescription() {        return description;    }    public void setDescription(String description) {        this.description = description;    }    public User getUser() {        return user;    }    public void setUser(User users) {        this.user = users;    }    public Instant getCreatedAt() {        return createdAt;    }    public void setCreatedAt(Instant createdAt) {        this.createdAt = createdAt;    }    public Instant getUpdatedAt() {        return UpdatedAt;    }    public void setUpdatedAt(Instant updatedAt) {        UpdatedAt = updatedAt;    }}