package com.Project3.Backend.Services;import com.Project3.Backend.Models.User;import com.Project3.Backend.Repositories.UserRepository;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.security.authentication.AuthenticationManager;import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;import org.springframework.security.core.Authentication;import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;import org.springframework.stereotype.Service;@Servicepublic class AuthService {    @Autowired    UserRepository userRepo;    @Autowired    JWTService jwtService;    @Autowired    AuthenticationManager authManager;    private BCryptPasswordEncoder encoder = new BCryptPasswordEncoder(12);    public User register(User user){        user.setPassword(encoder.encode(user.getPassword()));        return  userRepo.save(user);    }    public String verify(User user) {        Authentication authentication =                authManager.authenticate(new UsernamePasswordAuthenticationToken(user.getEmail(),user.getPassword()));        if(authentication.isAuthenticated()){            return jwtService.generateToken(user.getEmail());        }else{            return "failure";        }    }}